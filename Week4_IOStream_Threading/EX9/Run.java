package Week4_IOStream_Threading.EX9;import java.io.*;import java.util.concurrent.BlockingQueue;import java.util.concurrent.LinkedBlockingQueue;public class Run {    static BlockingQueue<Integer> queue = new LinkedBlockingQueue<>();    static class Reader implements Runnable {        String source;        public Reader(String source) {            this.source = source;        }        @Override        public void run() {            try(BufferedReader br = new BufferedReader(new FileReader(source))) {                int charCount = 0;                int ch;                while ((ch = br.read()) != -1) {                    charCount++;                }                queue.put(charCount);            } catch (Exception e) {                e.printStackTrace();            }        }    }    static class Writer implements Runnable {        String source;        public Writer(String source) {            this.source = source;        }        @Override        public void run() {            try(BufferedWriter bw = new BufferedWriter(new FileWriter(source))) {                int count = queue.take();                bw.write("So ki tu trong file: " + count);            } catch (Exception e) {                e.printStackTrace();            }        }    }    public static void main(String[] args) {        Thread doc = new Thread(new Reader("C:\\Users\\ADMIN\\Documents\\TepText\\Week4_IOStream\\Bai9_doc.txt"));        Thread ghi = new Thread(new Writer("C:\\Users\\ADMIN\\Documents\\TepText\\Week4_IOStream\\Bai9_ghi.txt"));        doc.start();        ghi.start();    }}