package Week4_IOStream_Threading.EX4;import java.io.BufferedReader;import java.io.File;import java.io.FileReader;import java.util.concurrent.BlockingQueue;import java.util.concurrent.LinkedBlockingQueue;public class Run {    static BlockingQueue<String> queue = new LinkedBlockingQueue<>();    static class ReaderThread extends Thread {        private File fileName;        public ReaderThread(File fileName) {            this.fileName = fileName;        }        @Override        public void run() {            try (BufferedReader br = new BufferedReader(new FileReader(fileName.getPath()))) {                String line;                while ((line = br.readLine()) != null) {                    queue.put(line);// Đặt dòng đọc được vào hàng đợi                }                queue.put("END"); // Đánh dấu kết thúc            } catch (Exception e) {                e.printStackTrace();            }        }    }    static class ProcessorThread extends Thread {        @Override        public void run() {            try {                while (true) {                    String line = queue.take(); // Lấy dòng từ hàng đợi                    if (line.equals("END")) break; // Nếu gặp "END", thoát vòng lặp                    int wordCount = line.split("\\s+").length; // Đếm số từ trong dòng                    System.out.println("Số từ: " + wordCount);                }            } catch (Exception e) {                e.printStackTrace();            }        }    }    public static void main(String[] args) {        ReaderThread reader = new ReaderThread(new File("C:\\Users\\ADMIN\\Documents\\TepText\\Week4_IOStream\\Bai4.txt"));        ProcessorThread processor = new ProcessorThread();        reader.start();        processor.start();    }}