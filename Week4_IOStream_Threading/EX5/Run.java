package Week4_IOStream_Threading.EX5;import java.io.FileWriter;import java.io.PrintWriter;import java.text.SimpleDateFormat;import java.util.Date;import java.util.concurrent.BlockingQueue;import java.util.concurrent.LinkedBlockingQueue;public class Run extends Thread {    private static final String LOG_FILE = "C:\\Users\\ADMIN\\Documents\\TepText\\Week4_IOStream\\Bai5.txt"; // Tên file log    private static BlockingQueue<String> logQueue = new LinkedBlockingQueue<>();    public static void log(String message) {        try {            logQueue.put(message); // Đưa thông điệp vào hàng đợi        } catch (InterruptedException e) {            e.printStackTrace();        }    }    @Override    public void run() {        try (PrintWriter writer = new PrintWriter(new FileWriter(LOG_FILE, true))) {            while (true) {                String message = logQueue.take(); // Lấy thông điệp từ hàng đợi                String timeStamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());                writer.println(timeStamp + " - " + message);                writer.flush(); // Đảm bảo dữ liệu được ghi ngay lập tức            }        } catch (Exception e) {            e.printStackTrace();        }    }    public static void main(String[] args) {        Run logger = new Run();        logger.start(); // Chạy luồng ghi log        // Mô phỏng các thông điệp log từ nhiều luồng khác nhau        log("Con");        log("Người");        log("Con");        log("Mèo");        try {            Thread.sleep(2000); // Chờ để luồng logger ghi log        } catch (InterruptedException e) {            e.printStackTrace();        }        log("EXIT");    }}